<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="test">-->
<!--    <select id="selectAll" resultType="com.itheima.mapper.User">-->
<!--        select * from tb_user;-->
<!--    </select>-->
<!--</mapper>-->

<mapper namespace="com.itheima.mapper.UserMapper">

  <select id="selectAll" resultType="com.itheima.mapper.User">
    select *
    from tb_user;
  </select>
  <select id="selectall" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand;
  </select>
  <select id="selectById" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand
    where id = #{id};
  </select>
  <select id="selectByOrder" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand
    where id <![CDATA[
     <
    ]]>
    #{id}
  </select>
  <select id="selectByCondition" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand
    where status = #{status}
      and company_name like #{companyName}
      and brand_name like #{brandName}
  </select>
  <select id="selectByCondition01" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand
    where status = #{status}
      and company_name like #{companyName}
      and brand_name like #{brandName}
  </select>
  <select id="selectByCondition02" resultType="com.itheima.mapper.Brand">
    select id,
           brand_name   as brandName,
           company_name as companyName,
           ordered,
           description,
           status
    from tb_brand
    where status = #{status}
      and company_name like #{companyName}
      and brand_name like #{brandName}
  </select>
  <select id="selectByCodition02" resultType="com.itheima.mapper.Brand">
    select id,
    brand_name as brandName,
    company_name as companyName,
    ordered,
    description,
    status
    from tb_brand
    <where>
      <if test="status != null">and status = #{status}</if>
      <if test="companyName != null and companyName != '' ">and company_name like #{companyName}
      </if>
      <if test="brandName != null and brandName != '' ">
        and brand_name like #{brandName}
      </if>
    </where>
  </select>
  <select id="selectByConditionSingle" resultType="com.itheima.mapper.Brand">
    select id,
    brand_name as brandName,
    company_name as companyName,
    ordered,
    description,
    status
    from tb_brand
    <where>
      <choose><!--相当于switch-->
        <when test="status != null"><!--相当于case-->
          status = #{status}
        </when>
        <when test="companyName != null and companyName != '' "><!--相当于case-->
          company_name like #{companyName}
        </when>
        <when test="brandName != null and brandName != ''"><!--相当于case-->
          brand_name like #{brandName}
        </when>
      </choose>
    </where>
  </select>

  <insert id="addBrand" useGeneratedKeys="true" keyProperty="id">
    insert into tb_brand (brand_name, company_name, ordered, description, status)
    values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});
  </insert>
  <update id="update">
    update tb_brand
    <set>
      <if test="brandName != null and brandName != ''">
        brand_name = #{brandName},
      </if>
      <if test="companyName != null and companyName != ''">
        company_name = #{companyName},
      </if>
      <if test="ordered != null">
        ordered = #{ordered},
      </if>
      <if test="description != null and description != ''">
        description = #{description},
      </if>
      <if test="status != null">
        status = #{status}
      </if>
    </set>
    where id = #{id};
  </update>

  <delete id="deleteById">
    delete
    from tb_brand
    where id = #{id};
  </delete>
  <delete id="deleteByIds">
    delete from tb_brand where id
    in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
    ;
  </delete>
</mapper>
